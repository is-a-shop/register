name: Create Subdomain DNS Record on Cloudflare

on:
  push:
    branches:
      - main

jobs:
  create-dns:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # Fetch the full history of both head and base for robust diffing
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install Python dependencies
        run: pip install requests

      - name: Get Merged JSON File Path (Enhanced Debugging)
        id: get_file_path
        run: |
          BASE_SHA="${{ github.event.pull_request.base.sha }}"
          HEAD_SHA="${{ github.event.pull_request.head.sha }}"
          MERGE_COMMIT_SHA="${{ github.event.pull_request.merge_commit_sha }}"

          echo "DEBUG: Base SHA: $BASE_SHA"
          echo "DEBUG: Head SHA: $HEAD_SHA"
          echo "DEBUG: Merge Commit SHA: $MERGE_COMMIT_SHA"

          NEW_FILE=""

          echo "DEBUG: Attempting to find added JSON file using git diff between base and head SHAs..."
          # This command compares the state of the base branch before the PR to the head of the PR.
          # It's often more reliable for finding files added *within* the PR's commits.
          # --diff-filter=A looks for added files.
          # We're adding the '^' anchor in grep to ensure it starts with 'domains/'
          NEW_FILE=$(git diff --name-only --diff-filter=A "$BASE_SHA" "$HEAD_SHA" | grep '^domains/.*\.json$' | head -n 1)

          if [ -z "$NEW_FILE" ]; then
            echo "DEBUG: No file found with git diff between base and head. Attempting fallback with merge commit..."
            # Fallback to git diff-tree on the merge commit itself
            if [ -n "$MERGE_COMMIT_SHA" ]; then
                NEW_FILE=$(git diff-tree --no-commit-id --name-only --diff-filter=A "$MERGE_COMMIT_SHA" | grep '^domains/.*\.json$' | head -n 1)
            fi
          fi

          if [ -z "$NEW_FILE" ]; then
            echo "::error::No new JSON file found in 'domains/' directory for this PR merge."
            echo "DEBUG: Checked with git diff ($BASE_SHA..$HEAD_SHA) and git diff-tree ($MERGE_COMMIT_SHA)."
            echo "DEBUG: --- Full `git diff --name-only --diff-filter=A $BASE_SHA $HEAD_SHA` output for debugging: ---"
            git diff --name-only --diff-filter=A "$BASE_SHA" "$HEAD_SHA" || true # Display raw output for debugging
            echo "DEBUG: --- Full `git diff-tree --no-commit-id --name-only --diff-filter=A $MERGE_COMMIT_SHA` output for debugging: ---"
            git diff-tree --no-commit-id --name-only --diff-filter=A "$MERGE_COMMIT_SHA" || true # Display raw output for debugging
            exit 1
          fi

          echo "NEW_FILE_PATH=$NEW_FILE" >> $GITHUB_OUTPUT
          echo "Discovered new file: $NEW_FILE"

      - name: Run DNS creation script
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLAREAPI }}
          CLOUDFLARE_ZONE_ID: ${{ secrets.CLOUDFLAREZONE }}
        run: python scripts/add_dns_record.py ${{ steps.get_file_path.outputs.NEW_FILE_PATH }}
