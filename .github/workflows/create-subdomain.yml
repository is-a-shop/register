name: Create Subdomain DNS Record on Cloudflare

# === The Fix ===
# Changed from `pull_request` to `pull_request_target`.
# This allows the workflow to access secrets even when the PR is from a fork,
# because it runs in the context of the base repository (your repository).
# The job is still protected by the `if` condition to only run after a successful merge.
on:
  pull_request_target:
    types: [closed]
    branches:
      - main # Only run if the PR was merged into the 'main' branch

jobs:
  create-dns:
    # This condition is crucial. It ensures the job only runs after a maintainer
    # has reviewed and merged the code, making the use of pull_request_target safe.
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # Fetch the full history. This is important for the git diff commands below.
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install Python dependencies
        run: pip install requests

      - name: Get Merged JSON File Path
        id: get_file_path
        run: |
          # These SHAs are provided by the pull_request_target context
          BASE_SHA="${{ github.event.pull_request.base.sha }}"
          HEAD_SHA="${{ github.event.pull_request.head.sha }}"
          MERGE_COMMIT_SHA="${{ github.event.pull_request.merge_commit_sha }}"

          echo "Base SHA: $BASE_SHA"
          echo "Head SHA: $HEAD_SHA"
          echo "Merge Commit SHA: $MERGE_COMMIT_SHA"

          # This logic robustly finds the new JSON file added in the pull request.
          # It first checks the difference between the PR's head and its base.
          NEW_FILE=$(git diff --name-only --diff-filter=A "$BASE_SHA" "$HEAD_SHA" | grep '^domains/.*\.json$' | head -n 1)

          # As a fallback, it checks the files changed in the merge commit itself.
          if [ -z "$NEW_FILE" ]; then
            echo "No file found with primary method. Using fallback with merge commit SHA..."
            NEW_FILE=$(git diff-tree --no-commit-id --name-only --diff-filter=A "$MERGE_COMMIT_SHA" | grep '^domains/.*\.json$' | head -n 1)
          fi

          if [ -z "$NEW_FILE" ]; then
            echo "::error::No new JSON file found in 'domains/' directory for this PR merge."
            exit 1
          fi

          echo "NEW_FILE_PATH=$NEW_FILE" >> $GITHUB_OUTPUT
          echo "Discovered new file: $NEW_FILE"

      - name: Run DNS creation script
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ZONE_ID: ${{ secrets.CLOUDFLARE_ZONE_ID }}
        run: python scripts/add_dns_record.py ${{ steps.get_file_path.outputs.NEW_FILE_PATH }}
